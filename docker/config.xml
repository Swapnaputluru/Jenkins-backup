<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1385.vb_58b_86ea_fff1">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2151.ve32c9d209a_3f"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2151.ve32c9d209a_3f">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3817.vd20b_7e2b_692b_">
    <script>pipeline {
    agent any
    stages {
        stage(&quot;Git clone&quot;) {
            steps {
                git branch: &apos;main&apos;, url: &apos;https://github.com/Swapnaputluru/docker.git&apos;
                sh &quot;ls&quot;
            }
        }
        stage(&quot;Build image&quot;) {
            steps {
                sh &apos;docker build -t demo . &apos;
                sh &quot;docker images&quot;
            } 
        }
        stage(&quot;Run image&quot;) {
            steps {
                sh &apos;docker stop cont1&apos;
                sh &apos;docker rm cont1&apos;
                sh &apos;docker run -dit -p 80:80 --name cont1 nginx &apos;
                sh &quot;docker ps&quot;
                
                
            } 
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>